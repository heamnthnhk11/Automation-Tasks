from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.chrome.options import Options
from time import sleep
import os
from dotenv import load_dotenv
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

load_dotenv()

def login_to_naukri():
    email = os.getenv("NAUKRI_EMAIL")
    password = os.getenv("NAUKRI_PASSWORD")

    driver = webdriver.Chrome()
    driver.get("https://www.naukri.com/")

    # Wait until the Login button is clickable
    login_button = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.ID, "login_Layer"))
    )
    login_button.click()

    # Wait for the login iframe (if it exists)
    try:
        iframe = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.CSS_SELECTOR, 'iframe[id*="login-iframe"]'))
        )
        driver.switch_to.frame(iframe)
    except:
        pass  # No iframe, continue

    # Wait for the email field to be present and input email
    email_input = WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.XPATH, '//input[@placeholder="Enter your active Email ID / Username"]'))
    )
    email_input.send_keys(email)

    # Wait for the password field to be present and input password
    password_input = WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.XPATH, '//input[@placeholder="Enter your password"]'))
    )
    password_input.send_keys(password)

    # Wait until the login button is clickable and click it
    login_submit = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, '//button[text()="Login"]'))
    )
    login_submit.click()

    # Wait for the login to complete
    WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.CLASS_NAME, "dashboard-wrapper"))
    )

    print("âœ… Logged into Naukri successfully!")
    driver.switch_to.default_content()
    return driver
